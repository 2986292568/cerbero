#include <jni.h>
#include <gst/gst.h>
#include <android/log.h>

#define CAT_FMT "%s:%d:%s"

static GstClockTime _priv_gst_info_start_time;

/* Declaration of static plugins */
@PLUGINS_DECLARATION@

/* Call this function to register static plugins */
void
gst_android_register_static_plugins (void)
{
  @PLUGINS_REGISTRATION@
}

void
gst_debug_logcat (GstDebugCategory * category, GstDebugLevel level,
    const gchar * file, const gchar * function, gint line,
    GObject * object, GstDebugMessage * message, gpointer unused)
{
  GstClockTime elapsed;
  gint android_log_level;
  gchar *tag;

  if (level > gst_debug_category_get_threshold (category))
    return;

  elapsed = GST_CLOCK_DIFF (_priv_gst_info_start_time,
      gst_util_get_timestamp ());

  switch (level) {
    case GST_LEVEL_ERROR:
      android_log_level = ANDROID_LOG_ERROR;
      break;
    case GST_LEVEL_WARNING:
      android_log_level = ANDROID_LOG_WARN;
      break;
    case GST_LEVEL_INFO:
      android_log_level = ANDROID_LOG_INFO;
      break;
    case GST_LEVEL_DEBUG:
      android_log_level = ANDROID_LOG_DEBUG;
      break;
    default:
      android_log_level = ANDROID_LOG_VERBOSE;
      break;
  }

  tag = g_strdup_printf("GStreamer:%s",
      gst_debug_category_get_name(category));
  __android_log_print (android_log_level, tag,
      "%" GST_TIME_FORMAT " " CAT_FMT " %s\n", GST_TIME_ARGS (elapsed),
      file, line, function, gst_debug_message_get (message));
  g_free(tag);
}

jint
JNI_OnLoad (JavaVM * vm, void *reserved)
{
  /* Disable this for releases if performance is important
   * or increase the threshold to get more information */
  gst_debug_set_active (TRUE);
  gst_debug_set_default_threshold (GST_LEVEL_INFO);
  gst_debug_remove_log_function (gst_debug_log_default);
  gst_debug_add_log_function ((GstLogFunction) gst_debug_logcat, NULL);
  /* get time we started for debugging messages */
  _priv_gst_info_start_time = gst_util_get_timestamp ();

  gst_init (NULL, NULL);
  gst_android_register_static_plugins ();
  return JNI_VERSION_1_4;
}
