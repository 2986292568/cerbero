# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

import os
from cerbero.errors import FatalError

class Recipe(recipe.Recipe):
    name = 'glib-networking'
    version = '2.34.2'
    licenses = [License.LGPLv2Plus]
    configure_options = "--without-ca-certificates"
    deps = ['glib', 'gnutls']

    files_misc = ['lib/gio/modules/libgiognutls%(mext)s']
    files_lang = ['glib-networking']

    def prepare(self):
        querymodule_path = None
        if self.config.target_platform in [Platform.DARWIN, Platform.IOS]:
          # For the universal build we need to use the right gio-querymodules
          arch = self.config.target_arch

          querymodule_path = os.path.join(self.config.prefix, arch, 'bin', 'gio-querymodules')
          if not os.path.exists(querymodule_path):
            querymodule_path = None

        if not querymodule_path:
          querymodule_path = os.path.join(self.config.prefix, 'bin', 'gio-querymodules')
          if not os.path.exists(querymodule_path):
            raise FatalError("Could not find gio-querymodules")

        if not self.config.prefix_is_executable():
          querymodule_path = 'true'

        self.config_sh = 'GIO_QUERYMODULES=%s %s' % (querymodule_path, self.config_sh)
